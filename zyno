--// [ REBEL GENIUS MODE: ENABLED ] \\--
-- ImGui-style UI Menu in Lua for Roblox Exploiting (SYNAPSE X Required)

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local localPlayer = Players.LocalPlayer
local mouse = localPlayer:GetMouse()
local aimbotEnabled = false
local menuVisible = false

-- ImGui UI
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/venus-admin/venus-ui/main/venus.lua"))() -- Use any UI lib here
local window = library:Window("Rebel UI - Made to Break", Color3.fromRGB(255, 0, 100), Enum.KeyCode.RightShift)

-- Tabs and Features
local combatTab = window:Tab("Combat")
local miscTab = window:Tab("Misc")

combatTab:Toggle("Aimbot (Hold Right Click)", false, function(val)
    aimbotEnabled = val
end)

miscTab:Button("Destroy GUI", function()
    library:Destroy()
end)

miscTab:Toggle("ESP (Fake)", false, function(val)
    print("ESP: "..tostring(val)) -- implement your own
end)

-- Aimbot Logic
local function getClosestEnemy()
    local closest = nil
    local shortest = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local pos, visible = workspace.CurrentCamera:WorldToViewportPoint(head.Position)

            if visible then
                local dist = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(pos.X, pos.Y)).Magnitude
                if dist < shortest then
                    shortest = dist
                    closest = head
                end
            end
        end
    end

    return closest
end

RunService.RenderStepped:Connect(function()
    if aimbotEnabled and UserInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
        local target = getClosestEnemy()
        if target then
            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, target.Position)
        end
    end
end)

-- UI Toggle
UserInputService.InputBegan:Connect(function(input, gpe)
    if gpe then return end
    if input.KeyCode == Enum.KeyCode.RightShift then
        menuVisible = not menuVisible
        library:Toggle(menuVisible)
    end
end)
